---
interface Props {
  lot: {
    id: number;
    name: string;
    size: string;
    price: string;
    features: string[];
    description: string;
  };
}

const { lot } = Astro.props;
---

<div class="bg-white rounded-lg shadow-lg overflow-hidden">
  <div 
    class="h-64 bg-gray-200 relative" 
    style={`background-image: url('/images/lot-${lot.id}.jpg'); background-size: cover; background-position: center;`}
  >
    <div class="absolute top-4 right-4 bg-primary-600 text-white px-4 py-2 rounded-full">
      {lot.price}
    </div>
  </div>
  <div class="p-6">
    <div class="flex justify-between items-center mb-4">
      <h3 class="text-2xl font-semibold">{lot.name}</h3>
      <span class="text-gray-600">{lot.size}</span>
    </div>
    <p class="text-gray-700 mb-4">{lot.description}</p>
    <div class="space-y-2">
      {lot.features.map(feature => (
        <div class="flex items-center text-gray-700">
          <svg class="w-5 h-5 text-primary-600 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
          </svg>
          {feature}
        </div>
      ))}
    </div>
    <div class="mt-6 flex gap-4">
      <a 
        href={`/contact?lot=${lot.id}`}
        class="flex-1 text-center bg-primary-600 hover:bg-primary-700 text-white px-6 py-2 rounded-lg transition-colors"
      >
        Inquire Now
      </a>
      <button 
        class="px-6 py-2 border-2 border-primary-600 text-primary-600 hover:bg-primary-50 rounded-lg transition-colors view-lot-details"
        data-lot-id={lot.id}
      >
        View Details
      </button>
    </div>
  </div>
</div>