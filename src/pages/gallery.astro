=---
import Layout from '../layouts/Layout.astro';
import 'photoswipe/style.css';

const galleryImages = [
  {
    src: '/images/subdivision_1.png',
    width: 1200,
    height: 800,
    alt: 'Connecticut River',
    category: 'subdivision'
  },
  {
    src: '/images/subdivision_2.png',
    width: 1200,
    height: 800,
    alt: 'Riverview Subdivision',
    category: 'subdivision'
  },
  {
    src: '/images/subdivision_3.png',
    width: 1200,
    height: 800,
    alt: 'Treeline Overview',
    category: 'subdivision'
  },
  {
    src: '/images/elevation_plans_1.png',
    width: 1200,
    height: 800,
    alt: 'Modern Farmhouse Front Elevation Example',
    category: 'elevation'
  },
  {
    src: '/images/elevation_plans_2.png',
    width: 1200,
    height: 800,
    alt: 'Modern Farmhouse Side Elevation Example',
    category: 'elevation'
  },
  {
    src: '/images/floor_plans.png',
    width: 1200,
    height: 800,
    alt: 'Main Level Floor Plan Example',
    category: 'floorplan'
  },
  {
    src: '/images/floor_plans_2.png',
    width: 1200,
    height: 800,
    alt: 'Lower Level Floor Plan Example',
    category: 'floorplan'
  },
  {
    src: '/images/floor_plans_3.png',
    width: 1200,
    height: 800,
    alt: '3D Floor Plan View Example',
    category: 'floorplan'
  }
];

const categories = [
  { id: 'all', name: 'All' },
  { id: 'subdivision', name: 'Subdivision' },
  { id: 'elevation', name: 'Elevation Plans' },
  { id: 'floorplan', name: 'Floor Plans' }
];

const floorPlanResources = [
  {
    name: 'HousePlans.com',
    url: 'https://www.houseplans.com',
    description: 'Browse thousands of architect-designed plans with mountain and view-lot orientations.',
    icon: 'üè°'
  },
  {
    name: 'TheHouseDesigners.com',
    url: 'https://www.thehousedesigners.com',
    description: 'Exclusive collection of luxury home plans perfect for mountain settings.',
    icon: '‚ú®'
  },
  {
    name: 'DreamHomeSource.com',
    url: 'https://www.dreamhomesource.com',
    description: 'Customizable plans featuring open concepts and large windows to maximize views.',
    icon: 'üé®'
  }
];
---

<Layout title="Photo Gallery">
  <div class="pt-24 pb-12">
    <div class="container mx-auto px-4">
      <h1 class="text-4xl font-bold text-center mb-8">Photo Gallery</h1>
      
      <div class="overflow-x-auto -mx-4 px-4 mb-8"> <!-- Add wrapper div -->
        <div class="flex justify-center gap-4 min-w-max" id="category-filters">
          {categories.map(category => (
            <button
              class="px-4 py-2 rounded-lg bg-gray-200 hover:bg-primary-100 transition-colors whitespace-nowrap"
              data-category={category.id}
            >
              {category.name}
            </button>
          ))}
        </div>
      </div>

      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-16" id="gallery">
        {galleryImages.map((image, index) => (
          <a
            href={image.src}
            data-pswp-width={image.width}
            data-pswp-height={image.height}
            data-category={image.category}
            class="gallery-item block rounded-lg overflow-hidden shadow-lg hover:shadow-xl transition-shadow"
          >
            <img
              src={image.src}
              alt={image.alt}
              class="w-full h-64 object-cover"
              loading="lazy"
            />
            <div class="p-4 bg-white">
              <p class="text-gray-800 truncate">{image.alt}</p>
            </div>
          </a>
        ))}
      </div>

      <div class="max-w-4xl mx-auto">
        <h2 class="text-3xl font-bold text-center mb-8">Floor Plan Resources</h2>
        <p class="text-center text-gray-600 mb-8">
          Explore these trusted resources for inspiration and floor plans that perfectly complement our mountain view lots.
          Work with Cornerstone Construction to customize any plan to your specific needs.
        </p>

        <div class="grid md:grid-cols-3 gap-6">
          {floorPlanResources.map(resource => (
            <div class="bg-white rounded-lg shadow-lg p-6 flex flex-col h-full">
              <div class="flex-1">
                <div class="text-4xl mb-4 text-center">{resource.icon}</div>
                <h3 class="text-xl font-bold mb-3 text-center truncate px-2" title={resource.name}>
                  {resource.name}
                </h3>
                <p class="text-gray-600 mb-4 text-center line-clamp-3">
                  {resource.description}
                </p>
              </div>
              <div class="pt-4 text-center border-t border-gray-100">
                <a
                  href={resource.url}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="inline-block text-primary-600 hover:text-primary-700 font-semibold"
                >
                  Browse Plans ‚Üí
                </a>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  </div>

  <script>
    import PhotoSwipe from 'photoswipe';

    const initPhotoSwipe = () => {
      const gallery = document.querySelector('#gallery');
      let pswp = null;

      gallery.addEventListener('click', (e) => {
        e.preventDefault();

        const target = e.target.closest('.gallery-item');
        if (!target) return;

        const visibleItems = Array.from(document.querySelectorAll('.gallery-item:not(.hidden)'));
        const items = visibleItems.map(element => ({
          src: element.href,
          w: parseInt(element.dataset.pswpWidth, 10),
          h: parseInt(element.dataset.pswpHeight, 10),
          alt: element.querySelector('img').alt
        }));

        const options = {
          dataSource: items,
          index: visibleItems.indexOf(target),
          showHideAnimationType: 'fade',
          closeOnVerticalDrag: true,
          padding: { top: 20, bottom: 20, left: 20, right: 20 },
          arrowPrev: true,
          arrowNext: true,
          counter: true,
          bgOpacity: 0.9,
          showHideOpacity: true
        };

        pswp = new PhotoSwipe(options);
        pswp.on('uiRegister', function() {
          pswp.ui.registerElement({
            name: 'custom-caption',
            order: 9,
            isButton: false,
            appendTo: 'root',
            html: 'Caption text',
            onInit: (el, pswp) => {
              pswp.on('change', () => {
                const currSlideElement = pswp.currSlide.data;
                el.innerHTML = currSlideElement.alt || '';
              });
            }
          });
        });

        pswp.init();
      });
    };

    // Initialize category filtering
    const initFilters = () => {
      const filters = document.querySelectorAll('#category-filters button');
      const items = document.querySelectorAll('.gallery-item');

      filters.forEach(filter => {
        filter.addEventListener('click', () => {
          const category = filter.dataset.category;
          
          // Update active filter style
          filters.forEach(f => f.classList.remove('bg-primary-600', 'text-white'));
          filter.classList.add('bg-primary-600', 'text-white');

          // Filter gallery items
          items.forEach(item => {
            if (category === 'all' || item.dataset.category === category) {
              item.classList.remove('hidden');
            } else {
              item.classList.add('hidden');
            }
          });
        });
      });

      // Set initial active state
      filters[0].click();
    };

    // Initialize when the page loads
    document.addEventListener('DOMContentLoaded', () => {
      initPhotoSwipe();
      initFilters();
    });
  </script>
</Layout>